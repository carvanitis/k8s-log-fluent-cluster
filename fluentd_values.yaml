# Default values for fluentd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: gcr.io/google-containers/fluentd-elasticsearch
  tag: v2.4.0
  pullPolicy: IfNotPresent
  # pullSecrets:
  #   - secret1
  #   - secret2

output:
  host: elasticsearch-client.default.svc.cluster.local
  port: 9200
  scheme: http
  sslVersion: TLSv1
  buffer_chunk_limit: 2M
  buffer_queue_limit: 8

env:
  FLUENT_LOKI_HOST: http://loki:3100
  FLUENT_ELASTICSEARCH_HOST: elasticsearch-client.default.svc.cluster.local
  FLUENT_ELASTICSEARCH_PORT: 9200
  FLUENT_ELASTICSEARCH_SSL_VERIFY: "false"
  FLUENT_ELASTICSEARCH_SSL_VERSION: "SSLv23"
  FLUENT_ELASTICSEARCH_SCHEME: http
  FLUENT_ELASTICSEARCH_LOG_ES_400_REASON: true
  FLUENT_KAFKA_BROKERS: "kafka-broker1:9092,kafka-broker2:9092,kafka-broker3:9092"
  APP1_FLUENT_KAFKA_TOPIC: "topic"
  

# Extra Environment Values - allows yaml definitions
extraEnvVars:
#  - name: VALUE_FROM_SECRET
#    valueFrom:
#      secretKeyRef:
#        name: secret_name
#        key: secret_key

# extraVolumes:
#   - name: es-certs
#     secret:
#       defaultMode: 420
#       secretName: es-certs
# extraVolumeMounts:
#   - name: es-certs
#     mountPath: /certs
#     readOnly: true

plugins:
  enabled: true
  pluginsList: ["fluent-plugin-label-router","fluent-plugin-tag-normaliser","fluent-plugin-multi-format-parser","fluent-plugin-kafka","fluent-plugin-grafana-loki:1.2.2"]

service:
  annotations: {}
  type: ClusterIP
  # loadBalancerIP:
  # type: NodePort
  # nodePort:
  # Used to create Service records
  ports:
    - name: "monitor-agent"
      protocol: TCP
      containerPort: 24220
    - name: "fluentbit-agent"
      protocol: TCP
      containerPort: 24284

metrics:
  enabled: false
  service:
    port: 24231
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    # namespace: monitoring
    # interval: 30s
    # scrapeTimeout: 10s

annotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/port: "24231"

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
#    kubernetes.io/tls-acme: "true"
#    # Depending on which version of ingress controller you may need to configure properly - https://kubernetes.github.io/ingress-nginx/examples/rewrite/#rewrite-target
#    nginx.ingress.kubernetes.io/rewrite-target: /
  labels: []
  # If doing TCP or UDP ingress rule don't forget to update your Ingress Controller to accept TCP connections - https://kubernetes.github.io/ingress-nginx/user-guide/exposing-tcp-udp-services/
  hosts:
#     - name: "http-input.local"
#       protocol: TCP
#       servicePort: 9880
#       path: /
  tls: {}
  # Secrets must be manually created in the namespace.
#    - secretName: http-input-tls
#      hosts:
#        - http-input.local

configMaps:
  general.conf: |
    # Prevent fluentd from handling records containing its own logs. Otherwise
    # it can lead to an infinite loop, when error in sending one message generates
    # another message which also fails to be sent and so on.
    <match fluentd.**>
      @type null
    </match>

    <match kube.var.log.containers.fluentd**>
      @type null
    </match>

    # Used for health checking
    <source>
      @type http
      port 9880
      bind 0.0.0.0
    </source>

    # Emits internal metrics to every minute, and also exposes them on port
    # 24220. Useful for determining if an output plugin is retryring/erroring,
    # or determining the buffer queue length.
    <source>
      @type monitor_agent
      bind 0.0.0.0
      port 24220
      tag fluentd.monitor.metrics
    </source>
  system.conf: |-
    <system>
      root_dir /tmp/fluentd-buffers/
    </system>
  forward-input.conf: |
    <source>
      @type forward
      port 24284
      bind 0.0.0.0
    </source>
  output.conf: |
    <match kube.var.log.containers.**>
      @id app_log_router
      @type label_router
      @log_level info
      <route>
        @label @app1
        @id route_app1
        <match>
          labels log-route:app1
        </match>
      </route>
      <route>
        @label @app2
        @id route_app2
        <match>
          labels log-route:app2
        </match>
      </route>
    </match>

    <label @app1>
      <filter>
        @type kubernetes_metadata
      </filter>
      <match kube.var.log.containers.**>
        @type tag_normaliser
        format app1.${namespace}.${pod_name}.${container_name}
      </match>
      <match app1.**>
        @type copy
        <store>
          @type kafka2
          brokers "#{ENV['FLUENT_KAFKA_BROKERS'] || 'kafka:9092'}"
          use_event_time true
          topic_key "#{ENV['APP1_FLUENT_KAFKA_TOPIC'] || 'topic'}"
          default_topic "#{ENV['APP1_FLUENT_KAFKA_TOPIC'] || 'topic'}"
          <format>
            @type json
          </format>
          <buffer>
            flush_thread_count "#{ENV['FLUENT_BUFFER_FLUSH_THREAD_COUNT'] || '8'}"
            flush_interval "#{ENV['FLUENT_BUFFER_FLUSH_INTERVAL'] || '5s'}"
            chunk_limit_size "#{ENV['FLUENT_BUFFER_CHUNK_LIMIT_SIZE'] || '2M'}"
            queue_limit_length "#{ENV['FLUENT_BUFFER_QUEUE_LIMIT_LENGTH'] || '32'}"
            retry_max_interval "#{ENV['FLUENT_BUFFER_RETRY_MAX_INTERVAL'] || '30'}"
            retry_forever true
          </buffer>
        </store>
        <store>
          @type stdout
        </store>
      </match>
    </label>

    <label @app2>
      <filter>
        @type kubernetes_metadata
      </filter>
      <match kube.var.log.containers.**>
        @type tag_normaliser
        format app2.${namespace}.${pod_name}.${container_name}
      </match>
      <match app2.**>
        @type copy
          <store>
            @type elasticsearch
            @id out_es
            @log_level info
            include_tag_key true
            host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
            port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
            path "#{ENV['FLUENT_ELASTICSEARCH_PATH']}"
            scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME'] || 'http'}"
            ssl_verify "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
            ssl_version "#{ENV['FLUENT_ELASTICSEARCH_SSL_VERSION'] || 'TLSv1'}"
            user "#{ENV['FLUENT_ELASTICSEARCH_USER']} || ''"
            password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}| ''"
            reload_connections "#{ENV['FLUENT_ELASTICSEARCH_RELOAD_CONNECTIONS'] || 'false'}"
            reconnect_on_error "#{ENV['FLUENT_ELASTICSEARCH_RECONNECT_ON_ERROR'] || 'true'}"
            reload_on_failure "#{ENV['FLUENT_ELASTICSEARCH_RELOAD_ON_FAILURE'] || 'true'}"
            log_es_400_reason "#{ENV['FLUENT_ELASTICSEARCH_LOG_ES_400_REASON'] || 'false'}"
            logstash_prefix "#{ENV['APP2_ELASTICSEARCH_LOGSTASH_PREFIX'] || 'kubernetes'}"
            logstash_format "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_FORMAT'] || 'true'}"
            index_name "#{ENV['APP2_ELASTICSEARCH_LOGSTASH_INDEX_NAME'] || 'kubernetes'}"
            type_name "#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_TYPE_NAME'] || 'fluentd'}"
            <buffer>
              flush_thread_count "#{ENV['FLUENT_BUFFER_FLUSH_THREAD_COUNT'] || '8'}"
              flush_interval "#{ENV['FLUENT_BUFFER_FLUSH_INTERVAL'] || '5s'}"
              chunk_limit_size "#{ENV['FLUENT_BUFFER_CHUNK_LIMIT_SIZE'] || '2M'}"
              queue_limit_length "#{ENV['FLUENT_BUFFER_QUEUE_LIMIT_LENGTH'] || '32'}"
              retry_max_interval "#{ENV['FLUENT_BUFFER_RETRY_MAX_INTERVAL'] || '30'}"
              retry_forever true
            </buffer>
          </store>
          <store>
            @type loki
            @id out_loki
            @log_level info
            line_format key_value
            remove_keys ["kubernetes","docker"]
            url "#{ENV['FLUENT_LOKI_HOST'] || 'http://loki:3100'}"
            label_keys container,container_id,host,namespace,pod,pod_id
            tenant app2
            <label>
              container $.kubernetes.container_name
              namespace $.kubernetes.namespace_name
              pod $.kubernetes.pod_name
            </label>
            <buffer>
              flush_thread_count "#{ENV['FLUENT_BUFFER_FLUSH_THREAD_COUNT'] || '8'}"
              flush_interval "#{ENV['FLUENT_BUFFER_FLUSH_INTERVAL'] || '5s'}"
              chunk_limit_size "#{ENV['FLUENT_BUFFER_CHUNK_LIMIT_SIZE'] || '2M'}"
              queue_limit_length "#{ENV['FLUENT_BUFFER_QUEUE_LIMIT_LENGTH'] || '32'}"
              retry_max_interval "#{ENV['FLUENT_BUFFER_RETRY_MAX_INTERVAL'] || '30'}"
              retry_forever true
            </buffer>
          </store>
      </match>
    </label>




resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 500m
  #  memory: 200Mi
  # requests:
  #  cpu: 500m
  #  memory: 200Mi

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

## Persist data to a persistent volume
persistence:
  enabled: false

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  # annotations: {}
  accessMode: ReadWriteOnce
  size: 10Gi

nodeSelector: {}

tolerations: []

affinity: {}

# Enable autoscaling using HorizontalPodAutoscaler
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 60

# Consider to set higher value when using in conjuction with autoscaling
# Full description about this field: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/#pod-v1-core
terminationGracePeriodSeconds: 30
